name: Release

on:
  push:
    tags: [ 'v*' ]

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-go@v5
      with:
        go-version: '1.24'
    
    - name: Prepare Build Environment
      run: |
        echo "📥 Setting up build environment..."
        mkdir -p dist
        
        # 初始化 Go 模块
        go mod init build-derper
        go get tailscale.com/cmd/derper@latest
        
        # 创建 main.go
        printf 'package main\n\nimport "tailscale.com/cmd/derper"\n\nfunc main() {\n    derper.Main()\n}\n' > main.go
        
        echo "✅ Build environment ready"

    - name: Build All Platforms
      run: |
        echo "🚀 Building derper for all platforms..."
        
        # 定义平台
        declare -A platforms=(
          ["linux-amd64"]="linux amd64"
          ["linux-arm64"]="linux arm64" 
          ["linux-armv7"]="linux arm 7"
          ["windows-amd64"]="windows amd64"
          ["darwin-amd64"]="darwin amd64"
          ["darwin-arm64"]="darwin arm64"
        )
        
        # 构建所有平台
        for name in "${!platforms[@]}"; do
          IFS=' ' read -r goos goarch goarm <<< "${platforms[$name]}"
          
          echo "🔨 Building $name..."
          
          ext=""
          if [ "$goos" = "windows" ]; then
            ext=".exe"
          fi
          
          # 交叉编译
          env CGO_ENABLED=0 GOOS=$goos GOARCH=$goarch GOARM=$goarm \
            go build -ldflags="-s -w" -o "dist/derper-$name$ext" .
          
          if [ -f "dist/derper-$name$ext" ]; then
            size=$(du -h "dist/derper-$name$ext" | cut -f1)
            echo "✅ Built: derper-$name$ext ($size)"
          else
            echo "❌ Failed: derper-$name$ext"
            exit 1
          fi
        done
        
        echo "📦 All builds completed:"
        ls -lh dist/
    
    - name: Create Archives
      run: |
        cd dist
        for file in derper-*; do
          if [ -f "$file" ]; then
            if [[ "$file" == *.exe ]]; then
              zip "${file%.exe}.zip" "$file" ../scripts/* ../README.md
            else
              tar -czf "$file.tar.gz" "$file" ../scripts/start.sh ../scripts/deploy.sh ../README.md
            fi
          fi
        done
        ls -la
    
    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        files: dist/*
        body: |
          ## DERP Server ${{ github.ref_name }}
          
          下载对应平台的文件，解压后运行：
          ```bash
          ./start.sh YOUR_SERVER_IP 9003 9004
          ```