# Tailscale DERP Server Configuration
# Copy this file to .env and customize the values for your deployment

# =============================================================================
# REQUIRED CONFIGURATION
# =============================================================================

# Domain name for the DERP server (REQUIRED for production)
# This should be the public domain name that clients will use to connect
DERP_DOMAIN=your-domain.com

# Hostname for the DERP server
# This is used for identification and logging
DERP_HOSTNAME=derp-server

# =============================================================================
# CERTIFICATE CONFIGURATION
# =============================================================================

# Certificate mode: 'manual' or 'letsencrypt'
# - manual: Use pre-existing certificates placed in DERP_CERTDIR
# - letsencrypt: Automatically obtain and renew certificates
DERP_CERTMODE=manual

# Directory containing SSL certificates (when using manual mode)
# Place your certificate files here:
# - ${DERP_DOMAIN}.crt (certificate file)
# - ${DERP_DOMAIN}.key (private key file)
DERP_CERTDIR=/certs

# =============================================================================
# NETWORK CONFIGURATION
# =============================================================================

# HTTP port (usually 80)
# Used for Let's Encrypt challenges and health checks
DERP_HTTP_PORT=80

# HTTPS port (usually 443)
# Main DERP protocol port
DERP_HTTPS_PORT=443

# Enable STUN server functionality
# STUN helps clients discover their public IP and NAT type
DERP_STUN=true

# STUN server port (usually 3478)
DERP_STUN_PORT=3478

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Log file path inside the container
DERP_LOGFILE=/var/log/derper/derper.log

# Enable verbose/debug logging
# Set to 'true' for detailed logs, 'false' for normal operation
DERP_VERBOSE=false

# =============================================================================
# ADVANCED CONFIGURATION (Optional)
# =============================================================================

# Verify client certificates (optional security feature)
# Set to 'true' to require valid client certificates
DERP_VERIFY_CLIENTS=false

# Mesh with other DERP servers (comma-separated list)
# Example: https://derp1.example.com,https://derp2.example.com
DERP_MESH_WITH=

# Bootstrap DNS servers (comma-separated list)
# Used for initial DNS resolution if system DNS is unreliable
# Example: 8.8.8.8,1.1.1.1
DERP_BOOTSTRAP_DNS=

# =============================================================================
# EXAMPLE CONFIGURATIONS
# =============================================================================

# Example 1: Basic setup with manual certificates
# DERP_DOMAIN=derp.mycompany.com
# DERP_HOSTNAME=company-derp
# DERP_CERTMODE=manual
# DERP_CERTDIR=/certs
# DERP_STUN=true
# DERP_VERBOSE=false

# Example 2: Let's Encrypt automatic certificates
# DERP_DOMAIN=derp.mycompany.com
# DERP_HOSTNAME=company-derp
# DERP_CERTMODE=letsencrypt
# DERP_CERTDIR=/var/lib/derper/letsencrypt
# DERP_STUN=true
# DERP_VERBOSE=false

# Example 3: Debug/development setup
# DERP_DOMAIN=localhost
# DERP_HOSTNAME=dev-derp
# DERP_CERTMODE=manual
# DERP_CERTDIR=/certs
# DERP_STUN=true
# DERP_VERBOSE=true

# =============================================================================
# DEPLOYMENT NOTES
# =============================================================================

# For production deployments:
# 1. Set DERP_DOMAIN to your actual domain name
# 2. Ensure DNS points to your server's public IP
# 3. Open ports 80, 443, and 3478 in your firewall
# 4. For manual certs: place certificate files in the certs directory
# 5. For Let's Encrypt: ensure port 80 is accessible for challenges
# 6. Test connectivity from Tailscale clients

# For development/testing:
# 1. You can use localhost or a local domain
# 2. Use self-signed certificates for testing
# 3. Consider enabling verbose logging

# Security recommendations:
# 1. Use strong, unique certificates
# 2. Keep certificates up to date
# 3. Monitor logs for suspicious activity
# 4. Use DERP_VERIFY_CLIENTS=true for enhanced security
# 5. Regularly update the Tailscale DERP server